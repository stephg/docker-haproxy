#!/bin/bash

if [ "$#" -ne 2 ]; then
  echo usage: $(basename $0) [config] [template]
  exit 1
fi

set -e
CONFIG="$1"
TEMPLATE="$2"

ETCD_URI=${SENTINEL_ETCD_URI:-http://172.17.42.1:4001}
ETCD_PREFIX=${SENTINEL_ETCD_PREFIX:-beacon}
ETCD_DIRECTORY=${SENTINEL_ETCD_DIRECTORY:-services}
LOG_LEVEL=${SENTINEL_LOG_LEVEL:-NOTICE}

test "$SENTINEL_LOG_SYSLOG" == false && LOG_SYSLOG=false || LOG_SYSLOG=true
test "$SENTINEL_LOG_CONSOLE" == true && LOG_CONSOLE=true || LOG_CONSOLE=false

mkdir -p "$(dirname $CONFIG)"
cat > "$CONFIG" <<EOF
--- # generated by $(basename $0)

watchers:
  $(echo $ETCD_DIRECTORY | tr '/-' '__'):
    watch:
      - $ETCD_DIRECTORY/_index
    context:
      - $ETCD_DIRECTORY
    templates:
      - src: $TEMPLATE
        dest: /etc/haproxy/sentinel.cfg

etcd:
  uri: $ETCD_URI
  prefix: $ETCD_PREFIX

logging:
  syslog: $LOG_SYSLOG
  console: $LOG_CONSOLE
  level: $LOG_LEVEL

...
EOF

mkdir -p "$(dirname $TEMPLATE)"
cat > "$TEMPLATE" <<EOF
global
	daemon
	maxconn 256
	user haproxy
	group haproxy

defaults
	mode http
	timeout connect 5s
	timeout client 50s
	timeout server 50s

frontend master
	bind *:80
	option forwardfor
	default_backend stats

        # configure ACLs on hostname
{{ range \$contextId, \$context := .$(echo $ETCD_DIRECTORY | tr '/-' '__') }}
{{   if \$context }}
        acl is_vhost_{{ \$contextId }} hdr_beg(host) -i {{ \$contextId }}.swarm
{{   end }}
{{ end }}

        # branch to correct backend
{{ range \$contextId, \$context := .$(echo $ETCD_DIRECTORY | tr '/-' '__') }}
{{   if \$context }}
        use_backend {{ \$contextId }} if is_vhost_{{ \$contextId }}
{{   end }}
{{ end }}


backend stats
        stats enable
        stats uri /
        stats refresh 5s
        stats show-legends

{{ range \$contextId, \$context := .$(echo $ETCD_DIRECTORY | tr '/-' '__') }}
{{   if \$context }}
backend {{ \$contextId }}
{{     range \$containerId, \$container := \$context }}
        server {{ \$containerId }} {{ \$container.host_name }}:{{ \$container.host_port }} check
{{     end }}
{{   end }}
{{ end }}
EOF

exec /usr/share/go/bin/sentinel -config "$CONFIG"

